{"name":"nexmap","enabled":true,"description":"Mudlet community map in Nexus","type":"group","id":1,"items":[{"type":"function","name":"SCRATCH","enabled":true,"id":81,"code":"//"},{"type":"function","name":"README","enabled":true,"id":27,"code":"/***************************************************************************************************\n\nPackage: nexMap\nVersion: 2.0\nBy:      Khaseem (Achaea)\n\nnexMap improves the functionality of the Nexus client by allowing \nusers to utilize the mudlet community map! See areas previously unmapped\nin Nexus. Pathing that can use wormholes, wings, and grates, exceed the 100 \nroom limit, and more.\n\n****************************************************************************************************\n\nIf you have any questions, issues, or suggestions for improvement\nplease contact me through in-game message, on the official forums,\nor the unofficial discord.\n\nIf this package improves your game experience donations to Khaseem\nare always welcome and appreciated.\n\n****************************************************************************************************\n\nnm load\t- ( RUN THIS FIRST ) Initial load of the map. There are a few seconds of degraded \n   \t\t  \t\t performance while the full model is loaded.\n\nnm\t\t- Displays nexMap Commands on screen.\n\n****************************************************************************************************\n\nFuture ideas:\n- Additional filters for users: \n\t- Find all wilderness exits in the area/world.\n- Add visual cues for raids with full sense.\n\n****************************************************************************************************\n\nSpecial Thanks to:\nTysandr - For providing the code to load Cytoscape as a package in Nexus. \nAeka - Acting as the sole tester through the entire development process.\n\n***************************************************************************************************/"},{"type":"function","name":"onLoad","enabled":true,"id":2,"code":"GMCP.Room = {};\nGMCP.Char = {\n    Items: {}\n};\n\n$.getScript(\"https://unpkg.com/realm-web/dist/bundle.iife.js\");\n$.getScript('https://cdn.jsdelivr.net/gh/Log-Wall/nexMap/nexMap.min.js');\nconsole.log('called nexMap CDN');\nreflex_disable(reflex_find_by_name(\"group\", \"Aliases\", false, false, \"nexMap\"));\nreflex_disable(reflex_find_by_name(\"group\", \"Triggers\", false, false, \"nexMap\"));"},{"type":"alias","name":"","enabled":true,"id":19,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"let startUp = function () {\n    reflex_enable(reflex_find_by_name(\"group\", \"Aliases\", false, false, \"nexMap\"));\n    reflex_enable(reflex_find_by_name(\"group\", \"Triggers\", false, false, \"nexMap\"));\n    nexMap.startUp();\n    nexMap.display.versionNotice(2.0);\n}\n    \nif (typeof nexMap_tab === 'undefined' || !nexMap_tab)\n   run_function('customTabs', {}, 'nexmap');\nelse\n    nexMap_tab.clear();\n\nif (typeof cy !== 'undefined' && cy.destroy) {\n    cy.destroy();\n    cy.elements().remove();\n}    \n\nif (typeof nexMap === 'undefined') {\n    run_function('onLoad', {}, 'nexmap');\n    let sleepUntil = async function(f, timeoutMs) {\n        return new Promise((resolve, reject) => {\n            let timeWas = new Date();\n            let wait = setInterval(function() {\n                if (f()) {\n                    console.log(\"resolved after\", new Date() - timeWas, \"ms\");\n                    clearInterval(wait);\n                    resolve();\n                } else if (new Date() - timeWas > timeoutMs) { // Timeout\n                    console.log(\"rejected after\", new Date() - timeWas, \"ms\");\n                    clearInterval(wait);\n                    reject();\n                }\n            }, 20);\n        });\n    }\n    sleepUntil(() => typeof nexMap !== 'undefined', 5000).then(\n        () => {\n            startUp()\n    \t},\n        () => {\n            console.log('nexMap load error.');\n        });    \n}\nelse {\n    startUp()\n}"}],"text":"nm load"},{"type":"group","name":"Functions","enabled":true,"id":22,"items":[{"type":"function","name":"onGMCP","enabled":true,"id":7,"code":"if (typeof nexMap === 'undefined' || typeof nexMap_tab === 'undefined') {\n    return;\n}\nnexMap.onGMCP(args.gmcp_method, args.gmcp_args);"},{"type":"function","name":"customTabs","enabled":true,"id":8,"code":"/***************************************************************************************************\n  Credit to Keneanung:\n  https://forums.achaea.com/discussion/3583/adding-html5-tabs\n***************************************************************************************************/\n'use strict';\nTab = {\n    active: true,\n    init: function init (name, title, mouseover, icon, container){\n        var saneId = name.toLowerCase().replace(/\\s/g, \"_\");\n        var divId = 'tbl_' + saneId;\n        this.client_tab = {\n            id: saneId,\n            tab_title: mouseover,\n            tab_html: title,\n            tab_type: \"content\",\n            content_html: '<div id=\"' + divId + '\" class=\"tab_table\" style=\"border:0\"></div>',\n            icon_active: icon\n        };\n        this.div_id = divId;\n        this.container = container;\n        client.register_custom_tab(this.client_tab, container);\n    },\n    move: function move (newContainer, newPosition){\n        var tabId = this.client_tab.id;\n        // move default location too!\n        var oldIndex = client.default_display_tabs[this.container].indexOf(tabId);\n        if(oldIndex >= 0){\n            client.default_display_tabs[this.container].splice(oldIndex, 1);\n        }\n        client.default_display_tabs[newContainer].push(tabId);\n        client.move_tab_to_existing_container(tabId, newContainer, newPosition);\n        this.container = newContainer;\n    },\n    \n    hide: function hide (){\n        client.activate_tab(this.client_tab.id, false);\n    },\n    \n    show: function show (){\n        client.activate_tab(this.client_tab.id, true);\n    },\n    \n    append: function append (what, newline){\n        if(newline){\n            what += \"<br>\";\n        }\n        $(\"#\" + this.div_id).append(what);   \n    },\n    \n    clear: function clear(){\n        $(\"#\" + this.div_id).empty();\n    },\n    \n    get_content_div: function get_content_div(){\n        return $(\"#\" + this.div_id);\n    },\n    \n    activate: function activate (){\n        var active_tab_index = $(\"#\" + this.container + \" > div\").tabs(\"option\", \"active\");\n        this.focus_before = \"#\" + $(\"#\" + this.container + \" > div > ul > li\").eq(active_tab_index).attr(\"id\");\n        var thisIndex = $(\"#tab_\" + this.client_tab.id).attr(\"data-tab-id\");\n        $(\"#\" + this.container + \" > div\").tabs(\"option\", \"active\", thisIndex);\n        this.active = true;\n    },\n    \n    deactivate: function deactivate (){\n        var newActiveTab = $(this.focus_before)\n        var currentContainer = newActiveTab.attr(\"data-display-element-id\");\n        if(currentContainer === this.container){\n            $(\"#\" + this.container + \" > div\").tabs(\"option\", \"active\", newActiveTab.attr(\"data-tab-id\"));\n        }\n        this.active=false;\n    },\n    \n    tabContainer: {\n        upper_left: \"container_1\",\n        lower_left: \"container_2\",\n        main: \"main_container\",\n        upper_right: \"container_3\",\n        lower_right: \"container_4\"\n    }\n};\n/***************************************************************************************************/\n\n// Nexus client function has hard coded values for image paths.\n// This rewrite provides the ability to use external icons.\nclient.draw_tab_element = function(tab, tabidx, elid) {\n    var caption = tab.icon_active;\n    var caption2 = tab.icon_inactive;\n    if (typeof caption == 'undefined') caption = 'main';\n    if (typeof caption2 == 'undefined') caption2 = caption;\n    if (caption.includes('http')) {\n        caption = '<img src='+caption+'>';\n        caption2 = '<img src='+caption2+'>';;         \n    }\n    else {\n    \tcaption = '<img src=\"/includes/images/tabs/' + caption + '.png\" />';\n    \tcaption2 = '<img src=\"/includes/images/tabs/' + caption2 + '.png\" />';\n    }\n\n    var ulli = $(\"<li/>\")\n            .attr(\"id\", \"tab_\" + tab.id)\n            .attr(\"data-placement\", \"bottom\")\n            .attr(\"data-display-element-id\", elid)\n            .attr(\"data-tab-id\", tabidx)\n            .attr(\"data-html-active\", caption)\n            .attr(\"data-html-inactive\", caption2)\n            .attr(\"rel\", \"tooltip\")\n            .attr(\"title\", tab.tab_title)\n            .addClass('client-tab')\n            .html(\n                $(\"<a/>\")\n                    .attr(\"data-element-id\", elid)\n                    .attr(\"data-tab-index\", tabidx)\n                    .attr(\"data-tab-elid\", tab.id)\n                    .attr(\"href\", \"#tab_content_\" + tab.id)\n                )\n\n    if (typeof tab.tab_click != \"undefined\")\n        ulli.click(tab.tab_click);\n    ulli.mousedown(function(e) {\n        // so that clicking on the borders of the tabs works\n        if (e.target.nodeName.toLowerCase() == 'li') {\n            ulli.find('a').click();\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    });\n    ulli.tooltip();\n\n    return ulli;\n}\n\nnexMap_tab = Object.create(Tab);\nnexMap_tab.init(\"nexmap_map\", \"nexMap\", \"nexMap\", 'https://cdn.jsdelivr.net/gh/Log-Wall/nexMap/nexmap_hat.png', 'container_1');\nnexMap_tab.activate()"}],"actions":[]},{"type":"group","name":"Aliases","enabled":true,"id":23,"items":[{"type":"alias","name":"","enabled":true,"id":50,"matching":"exact","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"nexMap.display.userCommands();"}],"text":"nm"},{"type":"alias","name":"","enabled":true,"id":76,"matching":"regexp","whole_words":true,"case_sensitive":true,"prefix_suffix":true,"actions":[{"action":"script","script":"// For a full list of alias commands use \"nm\" in game.\n\nnexMap.aliases.call(args[1], args[2] ? args[2] : false)"}],"text":"^nm (\\w+)\\s?(.+)?$"}],"actions":[]},{"type":"group","name":"Triggers","enabled":true,"id":24,"items":[{"type":"group","name":"Gags","enabled":true,"id":63,"items":[{"type":"trigger","name":"","enabled":true,"id":37,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are already there!","actions":[{"action":"script","script":"gag_current_line();"}]},{"type":"trigger","name":"","enabled":true,"id":35,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You cease your movement.","actions":[{"action":"script","script":"gag_current_line();"}]},{"type":"trigger","name":"","enabled":true,"id":36,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Carefully getting your bearings, you set off \\w+ toward your goal\\.$","actions":[{"action":"script","script":"if (nexMap.walker.pathing)\n    gag_current_line();"}]},{"type":"trigger","name":"","enabled":true,"id":38,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You're not currently traversing to any location.","actions":[{"action":"script","script":"gag_current_line();"}]},{"type":"trigger","name":"","enabled":true,"id":33,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You have arrived at your destination!","actions":[{"action":"script","script":"if (nexMap.walker.pathing)\n    gag_current_line();"}]},{"type":"trigger","name":"","enabled":true,"id":43,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Now now, don't be so hasty!","actions":[{"action":"script","script":"if (nexMap.walker.pathing)\n    gag_current_line();"}]},{"type":"trigger","name":"","enabled":true,"id":58,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You stumble slightly as you abruptly decide to stop walking towards your goal.","actions":[{"action":"script","script":"nexMap.walker.stop();"}]},{"type":"trigger","name":"","enabled":true,"id":68,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You are already traversing to a location. If you wish to cancel your movement, please CLICK HERE.","actions":[{"action":"script","script":"if (nexMap.walker.pathing)\n    gag_current_line();"}]}],"actions":[]},{"type":"group","name":"Farsee","enabled":true,"id":64,"items":[{"type":"trigger","name":"","enabled":true,"id":60,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You close your eyes momentarily and extend the range of your vision, seeking out the presence of (\\w+)\\.$","actions":[{"action":"script","script":"gag_current_line();\nprint(`<span>You close your eyes momentarily and extend the range of your vision, seeking out the presence of </span><span style='color:goldenrod'>${args[1]}</span>`)"}]},{"type":"trigger","name":"","enabled":true,"id":41,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^Though too far away to accurately perceive details, you see that (\\w+) is in ((the)?.+)\\.","actions":[{"action":"script","script":"if (nexMap.farseeArea(args[1], args[2])) {\n    gag_current_line();\n}"}]},{"type":"trigger","name":"","enabled":true,"id":59,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^You see that (\\w+) is at (.+)\\.$","actions":[{"action":"script","script":"if (nexMap.farseeLocal(args[1], args[2])) {\n    gag_current_line();\n}"}]}],"actions":[]},{"type":"trigger","name":"","enabled":true,"id":40,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"I cannot fathom the meaning of \"worm\".","actions":[{"action":"script","script":"if (nexMap.settings.userPreferences.useWormholes)\n    nexMap.settings.toggle('useWormholes');\n\nif (nexMap.walker.destination) \n    nexMap.walker.determinePath();\n    "}]},{"type":"trigger","name":"","enabled":true,"id":62,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"A shimmering orb covers the city, preventing you from rising to the skies.","actions":[{"action":"script","script":"nexMap.settings.userPreferences.antiWingAreas.push(nexMap.currentArea);\nnexMap.walker.pathing = false;\nif (nexMap.walker.destination) {\n    nexMap.walker.speedWalk(nexMap.currentRoom, nexMap.walker.destination);\n}"}]},{"type":"trigger","name":"","enabled":true,"id":65,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"Your wings cannot carry you over continents or planes.","actions":[{"action":"script","script":"nexMap.settings.userPreferences.antiWingAreas.push(nexMap.currentArea);\nnexMap.walker.pathing = false;\nif (nexMap.walker.destination) {\n    nexMap.walker.speedWalk(nexMap.currentRoom, nexMap.walker.destination);\n}"}]},{"type":"trigger","name":"","enabled":true,"id":75,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You can only Pierce the Veil from the prime material plane.","actions":[{"action":"script","script":"nexMap.settings.userPreferences.antiGareAreas.push(nexMap.currentArea);\nnexMap.walker.pathing = false;\nif (nexMap.walker.destination) {\n    nexMap.walker.speedWalk(nexMap.currentRoom, nexMap.walker.destination);\n}"}]},{"type":"trigger","name":"","enabled":true,"id":74,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"You must be on the ground to enter an indoors location - you cease walking your path.","actions":[{"action":"command","command":"land"}]},{"type":"trigger","name":"Universe Tarot","enabled":true,"id":77,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"A shimmering, translucent image rises up before you, its glittering surface displaying the verdant grasslands, soaring mountains, sprawling settlements and deep blue seas of Sapience.","actions":[{"action":"script","script":"if (!nexMap.walker.pathing) {return;}\nif (nexMap.walker.universeTarget) {\n\tsend_direct(`queue addclear eqbal touch ${nexMap.walker.universeTarget}`);\n    nexMap.walker.universeTarget = false;\n}"}]},{"type":"trigger","name":"Anti Universe Area","enabled":true,"id":78,"matching":"exact","whole_words":true,"case_sensitive":true,"text":"The Universe tarot will only work on the Prime Material Plane.","actions":[{"action":"script","script":"nexMap.settings.userPreferences.antiUniverseAreas.push(nexMap.currentArea);\nnexMap.walker.pathing = false;\nif (nexMap.walker.destination) {\n    nexMap.walker.speedWalk(nexMap.currentRoom, nexMap.walker.destination);\n}"}]},{"type":"trigger","name":"Nur Rift Exit","enabled":true,"id":82,"matching":"regexp","whole_words":true,"case_sensitive":true,"text":"^No sooner does your hand touch against the sizzling maw of a planar tear than do you feel yourself violently yanked within, a scream of pained fury and primordial extinction tearing through your form as you are hurled bodily across the worldly gap to be expelled, violently, from the other side\\.$","actions":[{"action":"script","script":"console.log(GMCP.Room.Info.num)\nconsole.log(nexMap.currentArea)\nif (GMCP.Room.Info.num == 45182) { return; }\ncy.$('.nurRift').remove();\nlet riftExits = [\n    {\n        group: 'edges',\n        data: {\n            id: `45182-${GMCP.Room.Info.num}`,\n            source: '45182',\n            target: `${GMCP.Room.Info.num}`,\n            weight: 1,\n            area: 431,\n            command: 'push 225037',\n            door: false,\n            z: 2\n        },\n        classes: ['nurRift']\n\t},\n    {\n        group: 'edges',\n        data: {\n            id: `${GMCP.Room.Info.num}-45182`,\n            source: `${GMCP.Room.Info.num}`,\n            target: 45182,\n            weight: 1,\n            area: nexMap.currentArea,\n            command: \"push 272931\",\n            door: false,\n            z: 2\n        },\n        classes: ['nurRift']\n\t}\n];\ncy.add(riftExits);"}],"items":[]}],"actions":[]}]}