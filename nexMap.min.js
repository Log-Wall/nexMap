"use strict";var cy={},nexMap={version:.97,logging:!1,loggingTime:"",mudmap:{},cytoscapeLoaded:!1,mudletMapLoaded:!1,currentRoom:-99,currentArea:-99,currentZ:-99,shortDirs:{east:"e",west:"w",south:"s",north:"n",northeast:"ne",northwest:"nw",southeast:"se",southeastst:"se",southwest:"sw",in:"in",out:"out",down:"d",up:"up"},findRoom:function(e){nexMap.logging&&console.log(`nexMap: nexMap.findRoom(${e})`);let t=nexMap.mudmap.areas.find(t=>t.rooms.find(t=>t.id==e));if(void 0===t)return console.log(`Room ${e} not mapped`),!1;let a=t.rooms.find(t=>t.id==e);return nexMap.logging&&console.log(a),!0},changeRoom:function(e){if(nexMap.logging&&console.log(`nexMap: nexMap.changeRoom(${e})`),!nexMap.findRoom(e))return;let t=cy.$id(e);cy.startBatch(),cy.$(".currentRoom").removeClass("currentRoom"),t.addClass("currentRoom"),cy.endBatch(),nexMap.currentRoom=e,$("#currentRoomLabel").text(`${t.data("areaName")}: ${t.data("name")}`),$("#currentExitsLabel").text(`Exits: ${t.data("exits").join(", ")}`),nexMap.changeArea(cy.$id(e).data().area,cy.$id(e).position().z),cy.center(".currentRoom")},changeArea:function(e,t){if(nexMap.logging&&console.log(`nexMap: nexMap.changeArea(${e} ${t})`),e==nexMap.currentArea&&t==nexMap.currentZ)return;nexMap.currentArea=e,nexMap.currentZ=t,cy.startBatch(),cy.$(".areaDisplay").removeClass("areaDisplay"),cy.$(".pseudo").remove();let a=cy.nodes().filter(e=>e.data("area")==nexMap.currentArea&&e.data("z")==nexMap.currentZ);a.addClass("areaDisplay"),nexMap.generateExits(),cy.center(nexMap.currentRoom),cy.endBatch()},generateExits:function(){nexMap.logging&&console.log("nexMap: nexMap.generateExits()");let e=0,t=function(t,a,n){let o={...t};"s"==a?o.y+=20:"n"==a?o.y+=-20:"e"==a?o.x+=20:"w"==a?o.x+=-20:"se"==a?(o.x+=20,o.y+=20):"sw"==a?(o.x+=-20,o.y+=20):"ne"==a?(o.x+=20,o.y+=-20):"nw"==a&&(o.x+=-20,o.y+=-20);let s={group:"nodes",data:{id:`pseudo${e}`},position:{x:o.x,y:o.y,z:o.z},classes:["pseudo",n?"areaAdjacent":`pseudo-${a}`]};cy.add(s),n&&cy.add({group:"edges",data:{id:`pseudoE${e}`,source:n,target:s.data.id},classes:["pseudo","areaAdjacentExit"]}),e++},a=cy.edges().filter(e=>e.data("area")==nexMap.currentArea&&e.data("z")==nexMap.currentZ);a.filter(e=>["up","d","in","out"].includes(e.data("command"))).forEach(e=>t(e.source().position(),e.data("command")));let n=a.filter(e=>["s","n","e","w","ne","nw","se","sw"].includes(e.data("command")));n=n.filter(e=>e.target().data("area")!=nexMap.currentArea||e.target().data("z")!=nexMap.currentZ),n.forEach(e=>t(e.source().position(),e.data("command"),e.data("source")))},generateGraph:async function(){return nexMap.logging&&console.log("nexMap: nexMap.generateGraph()"),new Promise((e,t)=>{for(let e of nexMap.mudmap.areas)e.roomCount&&nexMap.mudmap.areas[e.id].rooms.forEach(t=>{let a=[];nexMap.mudmap.areas.find(e=>e.rooms.find(e=>e.id==t.id)).rooms.find(e=>e.id==t.id).exits.forEach(e=>a.push(nexMap.shortDirs[e.name]?nexMap.shortDirs[e.name]:e.name));let n={group:"nodes",data:{id:t.id,area:e.id,areaName:e.name,environment:t.environment,name:t.name,userData:t.userData,z:t.coordinates[2],exits:a},position:{x:20*t.coordinates[0],y:-20*t.coordinates[1],z:t.coordinates[2]},classes:[`environment${t.environment}`],locked:!0};cy.add(n)});for(let e of nexMap.mudmap.areas)e.roomCount&&nexMap.mudmap.areas[e.id].rooms.forEach(t=>{t.exits.forEach(a=>{let n,o=nexMap.shortDirs[a.name]?nexMap.shortDirs[a.name]:a.name;0==cy.$(`#${t.id}-${a.exitId}`).length&&(n={group:"edges",data:{id:`${t.id}-${a.exitId}`,source:t.id,target:a.exitId,weight:1,area:e.id,command:o,z:t.coordinates[2]}},"in"==o?n.classes=["inexit"]:"out"==o?n.classes=["outexit"]:"up"==o?n.classes=["upexit"]:"d"==o?n.classes=["downexit"]:"worm warp"==o?n.classes=["wormhole"]:"enter grate"==o&&(n.classes=["sewergrate"]),cy.add(n))})});cy.edges().filter(e=>"southeastst"==e.data("command")).forEach(e=>e.data().command="se"),cy.$(".wormhole").data({weight:nexMap.settings.userPreferences.useWormholes?1:100}),console.log("nexMap: Graph model created."),e()})},loadDependencies:async function(){nexMap.logging&&console.log("nexMap: nexMap.loadDependencies()");let e=async function(){return new Promise((e,t)=>{let a="https://cdnjs.cloudflare.com/ajax/libs/cytoscape/3.18.2/cytoscape.min.js",n=document.getElementsByTagName("head")[0],o=document.createElement("script");o.src=a+"?"+Math.random(),o.onload=(()=>{console.log("Loaded "+a+"."),nexMap.cytoscapeLoaded=!0,e()}),o.onerror=(()=>{console.log("Unable to load "+a+"."),t()}),n.appendChild(o)})},t=function(e){let a;if(null==e||"object"!=typeof e)return e;if(e instanceof String)return(" "+e).slice(1);if(e instanceof Date)return a=new Date,a.setTime(e.getTime()),a;if(e instanceof Array){a=[];for(var n=0,o=e.length;n<o;n++)a[n]=t(e[n]);return a}if(e instanceof Object){for(var s in a={},e)e.hasOwnProperty(s)&&(a[s]=t(e[s]));return a}throw new Error("Unable to copy object! Type not supported.")},a=function(){$("body").on("restoreMap",function(e,t){console.log(t),window.Map=t,$("body").off("restoreMap")});let e=document.createElement("iframe");e.width=0,e.height=0,e.src="about:blank",e.onload=function(){$("body").trigger("restoreMap",[t(e.contentWindow.Map)]),document.body.removeChild(e)},document.body.appendChild(e)},n=async function(){return new Promise((e,t)=>{$.ajax({async:!0,global:!1,url:"https://raw.githubusercontent.com/Log-Wall/AchaeaNexus/main/mudletmap-min.json",dataType:"json",success:function(e){nexMap.mudmap=e,nexMap.mudletMapLoaded=!0},complete:()=>{nexMap.mudletMapLoaded&&e(),console.log("nexMap: mudlet JSON map loaded.")},error:()=>{t()}})})};return a(),await Promise.all([e(),n()]),!0},initializeGraph:function(){nexMap.logging&&console.log("nexMap: nexMap.initializeGraph()"),$("#cy").length&&$("#cy").remove(),$("<div></div>",{id:"currentRoomLabel"}).appendTo("#tbl_nexmap_map"),$("<div></div>",{id:"cy"}).appendTo("#tbl_nexmap_map"),$("<div></div>",{style:"position:absolute;bottom:0px",id:"currentExitsLabel"}).appendTo("#tbl_nexmap_map"),cy=cytoscape({container:document.getElementById("cy"),layout:"grid",zoom:1,minZoom:.25,maxZoom:3,boxSelectionEnabled:!1,selectionType:"single",hideEdgesOnViewport:!0,textureOnViewport:!0,motionBlur:!0,pixelRatio:"auto"})},startUp:function(){nexMap.logging&&(console.log("nexMap: nexMap.startUp()"),nexMap.loggingTime=new Date),run_function("nexMap.settings",{},"nexmap"),nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),run_function("nexMap.display",{},"nexmap"),nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),nexMap.display.notice("Loading mapper modules"),nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),nexMap.loadDependencies().then(()=>{nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),nexMap.initializeGraph(),nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),nexMap.generateGraph().then(()=>{nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),run_function("nexMap.styles",{},"nexmap"),nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),run_function("nexMap.walker",{},"nexmap"),nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),nexMap.styles.style(),nexMap.logging&&console.log(`${(new Date-nexMap.loggingTime)/1e3}s`),nexMap.display.notice("Mapper loaded and ready for use."),client.send_direct("ql"),cy.center(".currentRoom"),nexMap.display.notice('Use "nm" for summary of user commands')})})},settings:{}};nexMap.settings.userPreferences=get_variable("nexMapConfigs")||{commandSeparator:"\\",useDuanathar:!1,useDuanatharan:!1,duanatharCommand:"say duanathar",duanatharanCommand:"say duanatharan",useWormholes:!1,vibratingStick:!1,displayWormholes:!1},nexMap.settings.save=function(){set_variable("nexMapConfigs",nexMap.settings.userPreferences),set_variable("nexMapStyles",nexMap.styles.userPreferences)},nexMap.settings.toggle=function(e){nexMap.settings.userPreferences[e]?nexMap.settings.userPreferences[e]=!1:nexMap.settings.userPreferences[e]=!0,["displayWormholes","useWormholes"].includes(e)&&cy.$(".wormhole").style({visibility:nexMap.settings.userPreferences.displayWormholes?"visible":"hidden",width:1}).data({weight:nexMap.settings.userPreferences.useWormholes?1:100}),nexMap.settings.save()},nexMap.styles={},nexMap.styles.userPreferences=get_variable("nexMapStyles")||{nodeShape:"rectangle",currentRoomShape:"star",currentRoomColor:"#ff1493"},nexMap.styles.style=function(){nexMap.logging&&console.log("nexMap: nexMap.style()"),$("#cy").css({id:"cy","background-image":" url(/includes/images/windows/map-background.jpg)",width:"100%",height:"calc(100% - 44px)",position:"absolute",overflow:"hidden",top:"0px",left:"0px","margin-top":"22px","margin-bottom":"22px"}),cy.startBatch(),cy.style().clear(),cy.style().selector("node").style({shape:nexMap.styles.userPreferences.nodeShape,width:10,height:10,"border-color":"black","border-width":.5,display:"none",locked:!0}).selector("edge").style({width:1,"line-color":"grey"}),cy.style().selector(".displayLabel").style({label:"data(id)",color:"white"}).selector(".areaDisplay").style({display:"element"}).selector(".areaAdjacent").style({display:"element",visibility:"hidden"}).selector(".wormhole").style({visibility:nexMap.settings.userPreferences.displayWormholes?"visible":"hidden",width:1,"line-style":"dashed","line-dash-pattern":[5,10],"line-color":"#8d32a8"}).selector(".sewergrate").style({visibility:"hidden"}).selector(".downexit").style({"source-arrow-shape":"triangle","curve-style":"bezier",visibility:"hidden"}).selector(".upexit").style({"source-arrow-shape":"triangle","curve-style":"bezier",visibility:"hidden"}).selector(".inexit").style({"source-arrow-shape":"circle","curve-style":"bezier",visibility:"hidden"}).selector(".outexit").style({"source-arrow-shape":"circle","curve-style":"bezier",visibility:"hidden"}).selector(".pseudo-d").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[-.6,-.7,.6,-.7,0,-.1]}).selector(".pseudo-up").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[.6,.7,-.6,.7,0,.1]}).selector(".pseudo-in").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[.7,-.6,.7,.6,.1,0]}).selector(".pseudo-out").style({display:"element",label:"","border-color":"black","border-width":.5,"background-color":"white",shape:"polygon","shape-polygon-points":[-.7,.6,-.7,-.6,-.1,0]}).selector(".areaAdjacentExit").style({display:"element","target-arrow-shape":"vee","curve-style":"straight","arrow-scale":.75}),nexMap.mudmap.customEnvColors.forEach(e=>{cy.style().selector(`.environment${e.id}`).style("background-color",`rgb(${e.color24RGB.join()})`)}),cy.style().selector(":selected").style({"background-color":"green"}).selector(".currentRoom").style({"border-color":nexMap.styles.userPreferences.currentRoomColor,"border-width":2,shape:nexMap.styles.userPreferences.currentRoomShape,width:12,height:12}),cy.style().update(),cy.on("mouseout","node",e=>{e.target.removeClass("displayLabel")}),cy.on("mouseover","node",e=>{e.target.flashClass("displayLabel",3e3)}),cy.on("zoom",e=>{cy.style().selector(".displayLabel").style({"font-size":`${12/cy.zoom()}pt`})}),cy.on("unselect","node",e=>{nexMap.walker.stop()}),cy.on("select","node",e=>{nexMap.walker.speedWalk()}),cy.endBatch();let e=function(){let e=function(e){$("body").append('<div class="client_nexmap-rules">&shy;<style>'+e+"</style></div>")};$(".client_nexmap-rules").length&&$(".client_nexmap-rules").remove();let t='.nexswitch {position: relative;display: inline-block;width: 38px;height: 22px;}.nexswitch input {opacity: 0;width: 0;height: 0;}.nexslider {position: absolute;cursor: pointer;top: 0;left: 0;right: 0;bottom: 0;background-color: #555555;-webkit-transition: .4s;transition: .4s;border-radius: 24px;}.nexslider:before {position: absolute;content: "";height: 16px;width: 16px;left: 3px;bottom: 3px;background-color: white;-webkit-transition: .4s;transition: .4s;border-radius: 50%;}input:checked + .nexslider {background-color: #2196F3;}input:focus + .nexslider {box-shadow: 0 0 1px #2196F3;}input:checked + .nexslider:before {-webkit-transform: translateX(16px);-ms-transform: translateX(16px);transform: translateX(16px);}.nexcontainer   { display: flex; }.nexfixed    { width: 200px; }.nexflex-item    { flex-grow: 1; }';"standard"!=client.css_style&&(t+='#tab_nexmap_map::before {content: "\\f262";}'),e(t)};e()},nexMap.styles.refresh=function(){cy.unmount(),cy.mount($("#cy")),nexMap.styles.style(),cy.center(".currentRoom"),cy.zoom(1)},nexMap.walker={pathing:!1,pathRooms:[],pathCommands:[],delay:!1,destination:0,antiWingAreas:[44],stepCommand:"",clientEcho:client.echo_input},nexMap.walker.speedWalk=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.speedwalk()"),nexMap.walker.pathingStartTime=new Date,client.echo_input=!1,nexMap.walker.determinePath()},nexMap.walker.step=function(){let e=nexMap.walker;if(nexMap.logging&&console.log("nexMap: nexMap.walker.step()"),0==e.pathCommands.length)return void(nexMap.logging&&console.log("nexMap: nexMap.walker.step RETURN"));let t=e.pathRooms.indexOf(GMCP.Room.Info.num);if(GMCP.Room.Info.num==e.destination)return e.pathing=!1,e.reset(),void nexMap.display.notice(`Pathing complete. ${(new Date-e.pathingStartTime)/1e3}s`);e.pathRooms.includes(GMCP.Room.Info.num.toString())&&(e.pathing=!0,e.stepCommand=e.pathCommands[t]),send_direct(`path stop${nexMap.settings.userPreferences.commandSeparator}${e.stepCommand}`)},nexMap.walker.determinePath=function(e,t){nexMap.logging&&console.log(`nexMap: nexMap.walker.determinePath(${e}, ${t})`);let a=e||cy.$(".currentRoom").data("id"),n=t||cy.$(":selected").data("id"),o=nexMap.walker;o.destination=n,o.pathRooms=[],o.pathCommands=[];let s=cy.elements().aStar({root:`#${cy.$id(a).data("id")}`,goal:`#${cy.$id(n).data("id")}`,weight:function(e){return e.data("weight")},directed:!0});s.found?(s.path.nodes().forEach(e=>o.pathRooms.push(e.data("id"))),s.path.edges().forEach(e=>o.pathCommands.push(e.data("command"))),o.checkClouds(s,n),o.hybridPath(),o.step()):nexMap.display.notice(`No path to ${n} found.`)},nexMap.walker.checkClouds=function(e,t){if(nexMap.logging&&console.log("nexMap: nexMap.walker.checkClouds()"),!nexMap.settings.userPreferences.useDuanathar&&!nexMap.settings.userPreferences.useDuanatharan)return;let a,n=nexMap.walker,o=e.path.nodes().find(e=>"y"!=e.data().userData.indoors&&!n.antiWingAreas.includes(e.data("area"))),s=o?o.data("id"):0;if(0==s)return;let r=cy.elements().aStar({root:`#${cy.$id(3885).data("id")}`,goal:`#${cy.$id(t).data("id")}`,weight:function(e){return e.data("weight")},directed:!0});nexMap.settings.userPreferences.useDuanatharan&&(a=cy.elements().aStar({root:`#${cy.$id(4882).data("id")}`,goal:`#${cy.$id(t).data("id")}`,weight:function(e){return e.data("weight")},directed:!0}));let l=function(t,a){e.distance>n.pathRooms.indexOf(s)+t.distance&&(n.pathRooms.splice(n.pathRooms.indexOf(s)+1),n.pathCommands.splice(n.pathRooms.indexOf(s)),n.pathCommands.push(a),t.path.nodes().forEach(e=>n.pathRooms.push(e.data("id"))),t.path.edges().forEach(e=>n.pathCommands.push(e.data("command"))))};a&&r.distance>a.distance?l(a,nexMap.settings.userPreferences.duanatharanCommand):l(r,nexMap.settings.userPreferences.duanatharCommand)},nexMap.walker.hybridPath=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.hybridPath()");let e=nexMap.walker.pathCommands,t=nexMap.walker.pathRooms,a=[],n=[t[0]];e.forEach((e,o)=>{0!=o||Object.values(nexMap.shortDirs).includes(e)?Object.values(nexMap.shortDirs).includes(e)||(n.push(t[o]),n.push(t[o+1]),a.push(`path track ${t[o]}`),a.push(e)):(n.push(t[o+1]),a.push(e))}),Object.values(nexMap.shortDirs).includes(e[e.length-1])&&(n.push(t[t.length-1]),a.push(`path track ${t[t.length-1]}`)),nexMap.walker.pathCommands=[...a],nexMap.walker.pathRooms=[...n]},nexMap.walker.reset=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.reset()"),nexMap.walker.pathing=!1,cy.$(":selected").unselect(),nexMap.walker.pathCommands=[],nexMap.walker.pathRooms=[],nexMap.walker.destination=0,client.echo_input=nexMap.walker.clientEcho},nexMap.walker.stop=function(){nexMap.logging&&console.log("nexMap: nexMap.walker.stop()"),!0===nexMap.walker.pathing&&(nexMap.walker.reset(),nexMap.display.notice("Pathing canceled"))},nexMap.display={pageBreak:20,pageIndex:0,displayCap:{},displayClick:"",displayEntries:{}},nexMap.display.notice=function(e){let t=$("<span></span>",{class:"mono"});$("<span></span>",{style:"color:DodgerBlue"}).text("[-").appendTo(t),$("<span></span>",{style:"color:OrangeRed"}).text("nexMap").appendTo(t),$("<span></span>",{style:"color:DodgerBlue"}).text("-] ").appendTo(t),$("<span></span>",{style:"color:GoldenRod"}).text(e).appendTo(t),print(t[0].outerHTML)},nexMap.display.generateTable=function(e,t){nexMap.display.pageIndex=0,nexMap.display.displayEntries=e,nexMap.display.displayCap=t,nexMap.display.displayTable()},nexMap.display.click=function(e){cy.$(":selected").unselect(),cy.$(`#${e}`).select()},nexMap.display.displayTable=function(){let e=nexMap.display.displayEntries,t=(nexMap.display.displayCap,$("<table></table>",{class:"mono",style:"max-width:100%;border:1px solid white;border-spacing:0px"}));if(0==nexMap.display.pageIndex){let e=$("<caption></caption>",{style:"text-align:left"}).appendTo(t);$("<span></span>",{style:"color:DodgerBlue"}).text("[-").appendTo(e),$("<span></span>",{style:"color:OrangeRed"}).text("nexMap").appendTo(e),$("<span></span>",{style:"color:DodgerBlue"}).text("-] ").appendTo(e),$("<span></span>",{style:"color:GoldenRod"}).text("Displaying matches for ").appendTo(e),$("<span></span>",{style:"font-weight:bold;color:LawnGreen"}).text(nexMap.display.displayCap).appendTo(e);let a=$("<tr></tr>",{style:"text-align:left;color:Ivory"}).appendTo(t);$("<th></th>",{style:"width:5em"}).text("Num").appendTo(a),$("<th></th>",{style:"width:auto"}).text("Name").appendTo(a),$("<th></th>",{style:"width:auto"}).text("Area").appendTo(a)}else{let e=$("<tr></tr>",{style:"text-align:left;color:Ivory"}).appendTo(t);$("<th></th>",{style:"width:5em"}).text("").appendTo(e),$("<th></th>",{style:"width:auto"}).text("").appendTo(e),$("<th></th>",{style:"width:auto"}).text("").appendTo(e)}let a,n=nexMap.display.pageIndex>0?nexMap.display.pageIndex*nexMap.display.pageBreak:0;for(let a=n;a<e.length&&a<n+nexMap.display.pageBreak;a++){let n=$("<tr></tr>",{style:"cursor:pointer;color:dimgrey;"}).appendTo(t);$("<td></td>",{style:"color:grey",onclick:`nexMap.display.click(${JSON.stringify(e[a].data("id"))});`}).text(e[a].data("id")).appendTo(n),$("<td></td>",{style:"color:gainsboro;text-decoration:underline",onclick:`nexMap.display.click(${JSON.stringify(e[a].data("id"))});`}).text(e[a].data("name")).appendTo(n),$("<td></td>",{onclick:`nexMap.display.click(${JSON.stringify(e[a].data("id"))});`}).text(e[a].data("areaName")).appendTo(n)}print(t[0].outerHTML),Math.ceil(nexMap.display.displayEntries.length/nexMap.display.pageBreak)>nexMap.display.pageIndex+1?(a=$("<span></span>",{style:"color:Goldenrod"}).text(`Displaying ${n+nexMap.display.pageBreak} of ${nexMap.display.displayEntries.length}.`),nexMap.display.pageIndex++,$("<span></span>",{style:"color:Goldenrod"}).text(" Click for ").appendTo(a),$("<a></a>",{style:"cursor:pointer;color:Ivory;text-decoration:underline;",onclick:"nexMap.display.displayTable()"}).text("MORE").appendTo(a)):a=$("<span></span>",{style:"color:Goldenrod"}).text(`Displaying ${nexMap.display.displayEntries.length} of ${nexMap.display.displayEntries.length}.`),print(a[0].outerHTML)},nexMap.display.userCommands=function(){let e={"nm load":"Initial load of the map. There are a few seconds of degraded performance while the full model is loaded.","nm config":"Display all user configuration options.","nm save":"Saves the current user configuration settings.","nm find (phrase)":"Replaces the functionality of the mapdb package. Displays all rooms matching the phrase. Clicking any entry on the table will begin pathing.","nm goto (id)":"Calculates the most efficient path to the target room. Will use wings/wormholes/dash/gallop if enabled by the user in settings.","nm stop":"Cancels the current pathing.","nm zoom":"Manual zoom control of the map. Accepts values between 0.2 - 3.0","nm refresh":"Refresh the graphical display of the map. Fail safe for display issues.","nm update":"Attempt to load the latest version of nexMap without regenerating the entire map.","nm wormholes":"Toggles the use of wormholes for pathing.","nm clouds":"Toggles the use of clouds, both high and low, for pathing.","(gui) note 1":"Selecting any room on the map via mouse click will speedwalk to the selected room.","(gui) note 2":"A mouse click on the map anywhere other than a room will unselect the current selection and stop any active pathing."},t=$("<table></table>",{class:"mono",style:"max-width:100%;border:1px solid white;border-spacing:5px"}),a=$("<caption></caption>",{style:"text-align:left"}).appendTo(t);$("<span></span>",{style:"color:DodgerBlue"}).text("[-").appendTo(a),$("<span></span>",{style:"color:OrangeRed"}).text("nexMap").appendTo(a),$("<span></span>",{style:"color:DodgerBlue"}).text("-] ").appendTo(a),$("<span></span>",{style:"color:GoldenRod"}).text("Aliases for user interaction").appendTo(a);let n=$("<tr></tr>",{style:"text-align:left;color:Ivory"}).appendTo(t);$("<th></th>",{style:"width:10em"}).text("Command").appendTo(n),$("<th></th>",{style:"width:auto"}).text("Summary").appendTo(n);for(let a in e){let n=$("<tr></tr>",{style:"color:dimgrey;border-top: 1px solid white;border-bottom: 1px solid white;"}).appendTo(t);$("<td></td>",{style:"color:grey"}).text(a).appendTo(n),$("<td></td>",{style:"color:gainsboro;"}).text(e[a]).appendTo(n)}print(t[0].outerHTML)},nexMap.display.configDialog=function(){let e=$("<div></div>",{id:"nexMapDialog"});$("<div></div>").appendTo(e);let t=$("<table></table>",{class:"mono nexInput",style:"max-width:100%;border-spacing:4x;vertical-align:center"}),a=$("<tr></tr>",{style:"text-align:left;color:Ivory"}).appendTo(t);$("<th></th>",{style:"width:auto"}).text("Option").appendTo(a),$("<th></th>",{style:"width:auto"}).text("Setting").appendTo(a);let n=[{name:"Wormholes",setting:"useWormholes"},{name:"Show Wormholes",setting:"displayWormholes"},{name:"Vibrating Stick",setting:"vibratingStick"},{name:"Low Clouds",setting:"useDuanathar"},{name:"High Clouds",setting:"useDuanatharan"}];for(let e=0;e<n.length;e++){let a=$("<label></label>",{class:"nexswitch nexInput"});$("<input></input>",{type:"checkbox",class:"nexbox nexInput"}).prop("checked",nexMap.settings.userPreferences[n[e].setting]).on("change",function(){nexMap.settings.toggle(n[e].setting)}).appendTo(a),$("<span></span>",{class:"nexslider nexInput"}).appendTo(a);let o=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(t);$("<td></td>",{style:"color:grey"}).text(n[e].name).appendTo(o),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(a).appendTo(o)}let o=$("<input></input>",{type:"text",class:"nexInput",id:"nexCommandSep",maxlength:1,width:24,value:nexMap.settings.userPreferences.commandSeparator}),s=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(t);$("<td></td>",{style:"color:grey"}).text("Command Separator").appendTo(s),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(o).appendTo(s);let r=$("<input></input>",{type:"text",class:"nexInput",id:"nexDuanathar",width:150,value:nexMap.settings.userPreferences.duanatharCommand}),l=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(t);$("<td></td>",{style:"color:grey"}).text("Low Clouds Command(s)").appendTo(l),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(r).appendTo(l);let i=$("<input></input>",{type:"text",class:"nexInput",id:"nexDuanatharan",width:150,value:nexMap.settings.userPreferences.duanatharanCommand}),p=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(t);$("<td></td>",{style:"color:grey"}).text("High Clouds Command(s)").appendTo(p),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(i).appendTo(p);let d=$("<select></select>",{class:"nexInput",id:"nexPlayerShape",height:"auto",width:"auto"}).on("change",function(){nexMap.styles.userPreferences.currentRoomShape=$(this)[0].value,cy.style().selector(".currentRoom").style({shape:$(this)[0].value}).update()});$("<option></option>",{value:"rectangle",text:"Rectangle"}).prop("selected","rectangle"==nexMap.styles.userPreferences.currentRoomShape).appendTo(d),$("<option></option>",{value:"ellipse",text:"Circle"}).prop("selected","ellipse"==nexMap.styles.userPreferences.currentRoomShape).appendTo(d),$("<option></option>",{value:"diamond",text:"Diamond"}).prop("selected","diamond"==nexMap.styles.userPreferences.currentRoomShape).appendTo(d),$("<option></option>",{value:"star",text:"Star"}).prop("selected","star"==nexMap.styles.userPreferences.currentRoomShape).appendTo(d),$("<option></option>",{value:"vee",text:"Vee"}).prop("selected","vee"==nexMap.styles.userPreferences.currentRoomShape).appendTo(d);let c=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(t);$("<td></td>",{style:"color:grey"}).text("Current room shape").appendTo(c),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(d).appendTo(c);let u=$("<input></input>",{type:"color",class:"nexInput",id:"nexPlayerColor",width:100,defaultValue:nexMap.styles.userPreferences.currentRoomColor,value:nexMap.styles.userPreferences.currentRoomColor}).on("change",function(){nexMap.styles.userPreferences.currentRoomColor=$(this)[0].value,cy.style().selector(".currentRoom").style({"border-color":$(this)[0].value}).update()}),g=$("<tr></tr>",{class:"nexRow",style:"cursor:pointer;color:dimgrey;"}).appendTo(t);$("<td></td>",{style:"color:grey"}).text("Current Room Color").appendTo(g),$("<td></td>",{style:"color:gainsboro;text-decoration:underline"}).append(u).appendTo(g),t.appendTo(e),e.dialog({title:"nexMap Configuration",width:400,close:function(){nexMap.settings.userPreferences.commandSeparator=$("#nexCommandSep")[0].value.toString(),nexMap.settings.userPreferences.duanatharCommand=$("#nexDuanathar")[0].value.toString(),nexMap.settings.userPreferences.duanatharanCommand=$("#nexDuanatharan")[0].value.toString(),nexMap.settings.save(),$(".nexInput").remove(),$(".nexMapDialog").parent().remove()}})};